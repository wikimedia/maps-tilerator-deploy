{
  "name": "tilelive-vector",
  "version": "3.9.4",
  "main": "./index.js",
  "description": "Vector tile => raster tile backend for tilelive",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/tilelive-vector.git"
  },
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "dependencies": {
    "aws-sdk": "^2.2.30",
    "s3urls": "^1.3.0",
    "mapnik": "~3.5.13",
    "tilelive": "~5.12.0",
    "tiletype": "0.3.x",
    "tar": "~2.2.1",
    "request": "~2.65.0",
    "numeral": "~1.5.3",
    "sphericalmercator": "~1.0.5",
    "spherical": "~0.1.0",
    "underscore": "~1.8.0"
  },
  "devDependencies": {
    "mapbox-studio-default-style": "1.0.1",
    "istanbul": "~0.3.17",
    "coveralls": "~2.11.2",
    "tape": "2.13.x",
    "tilejson": "1.x",
    "simple-statistics": "~0.8.0"
  },
  "scripts": {
    "test": "tape test/*.js",
    "coverage": "istanbul cover tape test/*.js && coveralls < ./coverage/lcov.info"
  },
  "readme": "tilelive-vector\n---------------\nImplements the tilelive API for rendering mapnik vector tiles to raster images.\n\n[![Build Status](https://secure.travis-ci.org/mapbox/tilelive-vector.png)](http://travis-ci.org/mapbox/tilelive-vector)\n[![Build status](https://ci.appveyor.com/api/projects/status/p9qx11cn2rl3ym4m?svg=true)](https://ci.appveyor.com/project/Mapbox/tilelive-vector)\n[![Coverage Status](https://coveralls.io/repos/mapbox/tilelive-vector/badge.svg?branch=master&service=github)](https://coveralls.io/github/mapbox/tilelive-vector?branch=master)\n\n### new Vector(options, callback)\n\n- *xml*: a Mapnik XML string that will be used to render vector tiles.\n- *source*: Optional, a uri string suitable for use with `tilelive.load()`. This is fallback source that will be used if no source is found as part of the Mapnik XML parameters.\n- *base*: Optional, basepath for Mapnik map. Defaults to `__dirname`.\n- *format*: Optional, target output format. Defaults to `png8:m=h`.\n- *scale*: Optional, Mapnik scale factor. Defaults to `1`.\n\n### Code concepts\n\n- *Backend z/x/y*: a request for a raster tile at, say, 3/3/3 does not always mean 3/3/3 is requested from the backend source. The z/x/y requested from the backend source is referred in code by `bz/bx/by` and generally represent the same or lower zoom level. This allows for features like *overzooming*, *maskLevel tiles*, and *scale factor adjustment*.\n- *Overzooming*: if a tile beyond the `maxzoom` of the backend is requested, Vector will attempt to render the tile using the parent of the request at `maxzoom`.\n- *maskLevel tiles*: to avoid requiring many duplicate or empty vector tiles to be generated at high zoom levels, the backend source can specify a `maskLevel`. If a vector tile is not initially found at some `z > maskLevel`, Vector will issue an additional request to the backend using the parent tile of of the request at `maskLevel`. This allows a lower zoom level to \"backfill\" high zoom levels.\n- *Scale factor adjustment*: the scale argument decrements the backend zoom level such that the requested tile is the visual equivalent (when viewed on the proper dpi device) of its parent counterpart. For example, `scale: 2` decrements `bz` by 1, `scale: 4` decrements by 2, and so on.\n\n### Backend headers\n\nThe Backend and Vector sources set the `x-vector-backend-object` header to indicate the type of backend source tile loaded. Possible values:\n\nvalue | description\n--- | ---\nempty | backend returned no tile\nfillzoom | tile from the fillzoom of the backend (backfilled from a lower zoom)\noverzoom | tile from the maxzoom of the backend (overzoomed)\ndefault | normal tile\n\n## Bonus constructors\n\nThere are two additional constructors provided for slightly different workflows for loading vector sources.\n\n### Vector.tm2z(uri, callback)\n\nLoad a vector source from a `uri` (filepath or HTTP url) to a [tm2](https://github.com/mapbox/tm2)-generated tm2z style package.\n\n### Vector.xray(options, callback)\n\nLoad a vector source with autogenerated data inspection (\"xray\") styles. `xml` is not required -- only the `uri` to a vector source backend is necessary.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mapbox/tilelive-vector/issues"
  },
  "homepage": "https://github.com/mapbox/tilelive-vector#readme",
  "_id": "tilelive-vector@3.9.4",
  "_shasum": "2ec510d41d1fab5ba493fda6fa594e98fe401b4b",
  "_resolved": "https://registry.npmjs.org/tilelive-vector/-/tilelive-vector-3.9.4.tgz",
  "_from": "https://registry.npmjs.org/tilelive-vector/-/tilelive-vector-3.9.4.tgz"
}
