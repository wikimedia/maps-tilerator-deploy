{
  "name": "s3urls",
  "version": "1.5.2",
  "description": "Create S3 urls from bucket/key or extract bucket/key from them",
  "main": "index.js",
  "bin": {
    "s3urls": "bin/s3urls.js"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "tape test/*.test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mapbox/s3urls.git"
  },
  "author": {
    "name": "Mapbox"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/mapbox/s3urls/issues"
  },
  "homepage": "https://github.com/mapbox/s3urls",
  "devDependencies": {
    "tape": "^3.0.3"
  },
  "dependencies": {
    "minimist": "^1.1.0",
    "s3signed": "^0.1.0"
  },
  "readme": "# s3Urls\n\n[![Build Status](https://travis-ci.org/mapbox/s3urls.svg?branch=node-4)](https://travis-ci.org/mapbox/s3urls)\n\nFrom bucket/key to URL and the other way around\n\n## Usage\n\nIn javascript:\n\n```javascript\nvar s3urls = require('s3urls');\nvar assert = require('assert');\n\nvar url = s3urls.toUrl('my-bucket', 'some/key');\nassert.deepEqual(url, {\n  's3': 's3://my-bucket/some/key',\n  'bucket-in-path': 'https://s3.amazonaws.com/my-bucket/some/key',\n  'bucket-in-host': 'https://my-bucket.s3.amazonaws.com/some/key'\n});\n\nvar url = 'https://s3.amazonaws.com/my-bucket/some/key';\nif (s3urls.valid(url)) {\n  var result = s3urls.fromUrl(url);\n  assert.deepEqual(result, {\n    Bucket: 'my-bucket',\n    Key: 'some/key'\n  });\n}\n```\n\nIn a shell:\n\n```sh\n$ npm install -g s3urls\n\n# Get URLs for a bucket/key\n$ s3urls to-url my-bucket some/file/key\ns3://my-bucket/some/file/key\nhttps://s3.amazonaws.com/my-bucket/some/file/key\nhttps://my-bucket.s3.amazonaws.com/some/file/key\n\n# Get one type of URL for a bucket/key\n$ s3urls to-url my-bucket some/file/key --type bucket-in-host\nhttps://my-bucket.s3.amazonaws.com/some/file/key\n\n# Convert a URL from one type to another (defaults to bucket-in-host type)\n$ s3urls convert s3://my-bucket/some/file/key\nhttps://my-bucket.s3.amazonaws.com/some/file/key\n\n$ s3urls convert https://my-bucket.s3.amazonaws.com/some/file/key --type s3\ns3://my-bucket/some/file/key\n\n# Get a signed URL for a private object (default 600s expiration)\n$ s3urls signed my-bucket some/file/key\nhttps://my-bucket.s3.amazonaws.com/some/file/key?...\n\n$ s3urls signed s3://my-bucket/some/file/key --expire 1200\nhttps://my-bucket.s3.amazonaws.com/some/file/key?...\n```\n",
  "readmeFilename": "readme.md",
  "_id": "s3urls@1.5.2",
  "_shasum": "182a991208fc1ab5214443eb250fc8f53b4bc9ea",
  "_resolved": "https://registry.npmjs.org/s3urls/-/s3urls-1.5.2.tgz",
  "_from": "https://registry.npmjs.org/s3urls/-/s3urls-1.5.2.tgz"
}
