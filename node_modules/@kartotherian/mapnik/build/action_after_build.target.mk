# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := action_after_build
### Rules for action "postinstall":
quiet_cmd_binding_gyp_action_after_build_target_postinstall = ACTION binding_gyp_action_after_build_target_postinstall $@
cmd_binding_gyp_action_after_build_target_postinstall = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p ./lib/binding; ./scripts/postinstall.sh

lib/binding/mapnik: obj := $(abs_obj)
lib/binding/mapnik: builddir := $(abs_builddir)
lib/binding/mapnik: TOOLSET := $(TOOLSET)
lib/binding/mapnik: $(srcdir)/scripts/postinstall.sh FORCE_DO_CMD
	$(call do_cmd,binding_gyp_action_after_build_target_postinstall)

all_deps += lib/binding/mapnik
action_binding_gyp_action_after_build_target_postinstall_outputs := lib/binding/mapnik


### Rules for final target.
# Build our special outputs first.
$(obj).target/action_after_build.stamp: | $(action_binding_gyp_action_after_build_target_postinstall_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_action_after_build_target_postinstall_outputs): | $(builddir)/mapnik.node

$(obj).target/action_after_build.stamp: TOOLSET := $(TOOLSET)
$(obj).target/action_after_build.stamp: $(builddir)/mapnik.node FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/action_after_build.stamp
# Add target alias
.PHONY: action_after_build
action_after_build: $(obj).target/action_after_build.stamp

# Add target alias to "all" target.
.PHONY: all
all: action_after_build

