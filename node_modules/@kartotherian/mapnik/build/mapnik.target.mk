# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := mapnik
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=mapnik' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DMAPNIK_GIT_REVISION="3.0.20"' \
	'-DSSE_MATH' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=c++11 \
	-std=c++11 \
	-std=gnu++1y \
	-I/usr/include \
	-I/usr/include/mapnik/agg \
	-I/usr/include/mapnik \
	-I/usr/include \
	-I/usr/include/freetype2 \
	-I/usr/include/libxml2 \
	-I/usr/include/gdal \
	-I/usr/include/postgresql \
	-I/usr/include/cairo \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/x86_64-linux-gnu/glib-2.0/include \
	-I/usr/include/pixman-1 \
	-I/usr/include/libpng16 \
	-DMAPNIK_MEMORY_MAPPED_FILE \
	-DMAPNIK_HAS_DLCFN \
	-DBIGINT \
	-DBOOST_REGEX_HAS_ICU \
	-DHAVE_JPEG \
	-DMAPNIK_USE_PROJ4 \
	-DHAVE_PNG \
	-DHAVE_WEBP \
	-DHAVE_TIFF \
	-DLINUX \
	-DMAPNIK_THREADSAFE \
	-DBOOST_SPIRIT_NO_PREDEFINED_TERMINALS=1 \
	-DBOOST_PHOENIX_NO_PREDEFINED_TERMINALS=1 \
	-DBOOST_SPIRIT_USE_PHOENIX_V3=1 \
	-DHAVE_CAIRO \
	-DGRID_RENDERER \
	-DHAVE_LIBXML2 \
	-std=c++11 \
	-g \
	-O2 \
	-fdebug-prefix-map=/build/mapnik-3.0.20+ds=. \
	-fstack-protector-strong \
	-Wformat \
	-Werror=format-security \
	-Wdate-time \
	-D_FORTIFY_SOURCE=2 \
	-g0 \
	-fvisibility=hidden \
	-fvisibility-inlines-hidden \
	-Wall \
	-pthread \
	-ftemplate-depth-300 \
	-Wsign-compare \
	-Wshadow \
	-O2

INCS_Debug := \
	-I/home/runuser/.node-gyp/10.15.2/include/node \
	-I/home/runuser/.node-gyp/10.15.2/src \
	-I/home/runuser/.node-gyp/10.15.2/deps/openssl/config \
	-I/home/runuser/.node-gyp/10.15.2/deps/openssl/openssl/include \
	-I/home/runuser/.node-gyp/10.15.2/deps/uv/include \
	-I/home/runuser/.node-gyp/10.15.2/deps/zlib \
	-I/home/runuser/.node-gyp/10.15.2/deps/v8/include \
	-I$(srcdir)/mason_packages/.link/include \
	-I$(srcdir)/mason_packages/.link/include/freetype2 \
	-I$(srcdir)/mason_packages/.link/include/cairo \
	-I$(srcdir)/src \
	-I$(srcdir)/../../nan \
	-I$(srcdir)/deps/geometry/include \
	-I$(srcdir)/deps/wagyu/include \
	-I$(srcdir)/../../protozero/include \
	-I$(srcdir)/../../mapnik-vector-tile/src

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=mapnik' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DMAPNIK_GIT_REVISION="3.0.20"' \
	'-DSSE_MATH' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=c++11 \
	-std=c++11 \
	-std=gnu++1y \
	-I/usr/include \
	-I/usr/include/mapnik/agg \
	-I/usr/include/mapnik \
	-I/usr/include \
	-I/usr/include/freetype2 \
	-I/usr/include/libxml2 \
	-I/usr/include/gdal \
	-I/usr/include/postgresql \
	-I/usr/include/cairo \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/x86_64-linux-gnu/glib-2.0/include \
	-I/usr/include/pixman-1 \
	-I/usr/include/libpng16 \
	-DMAPNIK_MEMORY_MAPPED_FILE \
	-DMAPNIK_HAS_DLCFN \
	-DBIGINT \
	-DBOOST_REGEX_HAS_ICU \
	-DHAVE_JPEG \
	-DMAPNIK_USE_PROJ4 \
	-DHAVE_PNG \
	-DHAVE_WEBP \
	-DHAVE_TIFF \
	-DLINUX \
	-DMAPNIK_THREADSAFE \
	-DBOOST_SPIRIT_NO_PREDEFINED_TERMINALS=1 \
	-DBOOST_PHOENIX_NO_PREDEFINED_TERMINALS=1 \
	-DBOOST_SPIRIT_USE_PHOENIX_V3=1 \
	-DNDEBUG \
	-DHAVE_CAIRO \
	-DGRID_RENDERER \
	-DHAVE_LIBXML2 \
	-std=c++11 \
	-g \
	-O2 \
	-fdebug-prefix-map=/build/mapnik-3.0.20+ds=. \
	-fstack-protector-strong \
	-Wformat \
	-Werror=format-security \
	-Wdate-time \
	-D_FORTIFY_SOURCE=2 \
	-g0 \
	-fvisibility=hidden \
	-fvisibility-inlines-hidden \
	-Wall \
	-pthread \
	-ftemplate-depth-300 \
	-Wsign-compare \
	-Wshadow \
	-O2

INCS_Release := \
	-I/home/runuser/.node-gyp/10.15.2/include/node \
	-I/home/runuser/.node-gyp/10.15.2/src \
	-I/home/runuser/.node-gyp/10.15.2/deps/openssl/config \
	-I/home/runuser/.node-gyp/10.15.2/deps/openssl/openssl/include \
	-I/home/runuser/.node-gyp/10.15.2/deps/uv/include \
	-I/home/runuser/.node-gyp/10.15.2/deps/zlib \
	-I/home/runuser/.node-gyp/10.15.2/deps/v8/include \
	-I$(srcdir)/mason_packages/.link/include \
	-I$(srcdir)/mason_packages/.link/include/freetype2 \
	-I$(srcdir)/mason_packages/.link/include/cairo \
	-I$(srcdir)/src \
	-I$(srcdir)/../../nan \
	-I$(srcdir)/deps/geometry/include \
	-I$(srcdir)/deps/wagyu/include \
	-I$(srcdir)/../../protozero/include \
	-I$(srcdir)/../../mapnik-vector-tile/src

OBJS := \
	$(obj).target/$(TARGET)/src/mapnik_logger.o \
	$(obj).target/$(TARGET)/src/node_mapnik.o \
	$(obj).target/$(TARGET)/src/blend.o \
	$(obj).target/$(TARGET)/src/mapnik_map.o \
	$(obj).target/$(TARGET)/src/mapnik_color.o \
	$(obj).target/$(TARGET)/src/mapnik_geometry.o \
	$(obj).target/$(TARGET)/src/mapnik_feature.o \
	$(obj).target/$(TARGET)/src/mapnik_image.o \
	$(obj).target/$(TARGET)/src/mapnik_image_view.o \
	$(obj).target/$(TARGET)/src/mapnik_grid.o \
	$(obj).target/$(TARGET)/src/mapnik_grid_view.o \
	$(obj).target/$(TARGET)/src/mapnik_memory_datasource.o \
	$(obj).target/$(TARGET)/src/mapnik_palette.o \
	$(obj).target/$(TARGET)/src/mapnik_projection.o \
	$(obj).target/$(TARGET)/src/mapnik_layer.o \
	$(obj).target/$(TARGET)/src/mapnik_datasource.o \
	$(obj).target/$(TARGET)/src/mapnik_featureset.o \
	$(obj).target/$(TARGET)/src/mapnik_expression.o \
	$(obj).target/$(TARGET)/src/mapnik_cairo_surface.o \
	$(obj).target/$(TARGET)/src/mapnik_vector_tile.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64 \
	-Wl,-z,now \
	-Wl,-z,origin \
	-Wl,-rpath=\$$ORIGIN/lib

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64 \
	-Wl,-z,now \
	-Wl,-z,origin \
	-Wl,-rpath=\$$ORIGIN/lib

LIBS := \
	-L/usr/lib \
	-lmapnik \
	-lmapnik-wkt \
	-lmapnik-json \
	-L/usr/lib/x86_64-linux-gnu \
	-Wl,-z,relro \
	-Wl,-z,now \
	-g0 \
	-pthread \
	-lboost_filesystem \
	-lboost_regex \
	-lcairo \
	-lpng \
	-lproj \
	-ltiff \
	-lwebp \
	-lxml2 \
	-licui18n \
	-lboost_system \
	-lharfbuzz \
	-ljpeg \
	-licuuc \
	-lfreetype \
	-lz \
	-ldl

/opt/service/node_modules/@kartotherian/mapnik/lib/binding/mapnik.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
/opt/service/node_modules/@kartotherian/mapnik/lib/binding/mapnik.node: LIBS := $(LIBS)
/opt/service/node_modules/@kartotherian/mapnik/lib/binding/mapnik.node: TOOLSET := $(TOOLSET)
/opt/service/node_modules/@kartotherian/mapnik/lib/binding/mapnik.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += /opt/service/node_modules/@kartotherian/mapnik/lib/binding/mapnik.node
# Add target alias
.PHONY: mapnik
mapnik: $(builddir)/mapnik.node

# Copy this to the executable output path.
$(builddir)/mapnik.node: TOOLSET := $(TOOLSET)
$(builddir)/mapnik.node: /opt/service/node_modules/@kartotherian/mapnik/lib/binding/mapnik.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/mapnik.node
# Short alias for building this executable.
.PHONY: mapnik.node
mapnik.node: /opt/service/node_modules/@kartotherian/mapnik/lib/binding/mapnik.node $(builddir)/mapnik.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/mapnik.node

