{
  "name": "tilelive-bridge",
  "version": "2.3.1",
  "main": "./index.js",
  "description": "Datasource => vector tiles bridge backend for tilelive",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/tilelive-bridge.git"
  },
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "dependencies": {
    "mapnik": "~3.5.0",
    "sphericalmercator": "1.0.x",
    "mapnik-pool": "~0.1.3"
  },
  "devDependencies": {
    "queue-async": "1.0.7",
    "tape": "3.0.x",
    "deep-equal": "~1.0.0",
    "istanbul": "~0.3.17",
    "coveralls": "~2.11.2",
    "eslint": "~1.00.0",
    "eslint-config-unstyled": "^1.1.0"
  },
  "scripts": {
    "test": "eslint index.js && tape test/*.js",
    "coverage": "istanbul cover tape test/*.js && coveralls < ./coverage/lcov.info"
  },
  "readme": "tilelive-bridge\n---------------\nImplements the tilelive API for generating mapnik vector tiles from traditional mapnik datasources.\n\n[![Build Status](https://secure.travis-ci.org/mapbox/tilelive-bridge.png)](http://travis-ci.org/mapbox/tilelive-bridge)\n[![Coverage Status](https://coveralls.io/repos/mapbox/tilelive-bridge/badge.svg?branch=master&service=github)](https://coveralls.io/github/mapbox/tilelive-bridge?branch=master)\n[![Build status](https://ci.appveyor.com/api/projects/status/x4i1acjnrrxdr7ax?svg=true)](https://ci.appveyor.com/project/Mapbox/tilelive-bridge)\n\n### new Bridge(options, callback)\n\n- *xml*: a Mapnik XML string that will be used to generate vector tiles.\n- *base*: Optional, basepath for Mapnik map. Defaults to `__dirname`.\n\n## Installation\n\n    npm install tilelive-bridge\n\nThough `tilelive` is not a dependency of `tilelive-bridge` you will want to\ninstall it to actually make use of `tilelive-bridge` through a reasonable\nAPI.\n\n## Usage\n\n```javascript\nvar tilelive = require('tilelive');\nrequire('tilelive-bridge').registerProtocols(tilelive);\n\ntilelive.load('bridge:///path/to/file.xml', function(err, source) {\n    if (err) throw err;\n\n    // Interface is in XYZ/Google coordinates.\n    // Use `y = (1 << z) - 1 - y` to flip TMS coordinates.\n    source.getTile(0, 0, 0, function(err, tile, headers) {\n        // `err` is an error object when generation failed, otherwise null.\n        // `tile` contains the compressed image file as a Buffer\n        // `headers` is a hash with HTTP headers for the image.\n    });\n\n    // The `.getGrid` is implemented accordingly.\n});\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mapbox/tilelive-bridge/issues"
  },
  "homepage": "https://github.com/mapbox/tilelive-bridge#readme",
  "_id": "tilelive-bridge@2.3.1",
  "_shasum": "ec33b3d3618b77c52809ca9a0cb72f95a9702471",
  "_resolved": "https://registry.npmjs.org/tilelive-bridge/-/tilelive-bridge-2.3.1.tgz",
  "_from": "https://registry.npmjs.org/tilelive-bridge/-/tilelive-bridge-2.3.1.tgz"
}
