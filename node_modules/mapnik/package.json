{
  "name": "mapnik",
  "description": "Tile rendering library for node",
  "url": "http://github.com/mapnik/node-mapnik",
  "homepage": "http://mapnik.org",
  "author": {
    "name": "Dane Springmeyer",
    "email": "dane@mapbox.com",
    "url": "mapnik.org"
  },
  "version": "3.5.13",
  "mapnik_version": "3.0.11",
  "main": "./lib/mapnik.js",
  "binary": {
    "module_name": "mapnik",
    "module_path": "./lib/binding/{node_abi}-{platform}-{arch}",
    "host": "https://mapbox-node-binary.s3.amazonaws.com",
    "remote_path": "./{module_name}/v{version}/{configuration}/",
    "package_name": "{node_abi}-{platform}-{arch}.tar.gz"
  },
  "bugs": {
    "url": "http://github.com/mapnik/node-mapnik/issues",
    "email": "dane@mapbox.com"
  },
  "keywords": [
    "map",
    "graphics",
    "canvas",
    "tile",
    "mapnik",
    "carto"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/mapnik/node-mapnik.git"
  },
  "contributors": [
    {
      "name": "Konstantin KÃ¤fer"
    },
    {
      "name": "Blake Thompson"
    }
  ],
  "licenses": [
    {
      "type": "BSD",
      "url": "https://github.com/mapnik/node-mapnik/blob/master/LICENSE.txt"
    }
  ],
  "dependencies": {
    "mapnik-vector-tile": "1.2.0",
    "nan": "~2.2.0",
    "node-pre-gyp": "~0.6.25",
    "protozero": "~1.3.0"
  },
  "bin": {
    "mapnik-inspect.js": "./bin/mapnik-inspect.js",
    "mapnik-render.js": "./bin/mapnik-render.js",
    "mapnik-shapeindex.js": "./bin/mapnik-shapeindex.js"
  },
  "scripts": {
    "prepublish": "npm ls",
    "test": "jshint bin lib/index.js lib/mapnik.js && mocha -R spec --timeout 50000",
    "preinstall": "npm install node-pre-gyp",
    "install": "node-pre-gyp install --fallback-to-build",
    "docs": "documentation src/*.cpp --polyglot -o documentation -f html --github --name Mapnik"
  },
  "devDependencies": {
    "aws-sdk": "2.0.12",
    "jshint": "^2.5.10",
    "mocha": "2.x",
    "sphericalmercator": "~1.0.2",
    "bytes": "~2.1.0"
  },
  "jshintConfig": {
    "node": true,
    "globalstrict": true,
    "undef": true,
    "unused": true,
    "noarg": true,
    "mocha": true
  },
  "readme": "# node-mapnik\n\nBindings to [Mapnik](http://mapnik.org) for [node](http://nodejs.org).\n\n[![NPM](https://nodei.co/npm/mapnik.png?downloads=true&downloadRank=true)](https://nodei.co/npm/mapnik/)\n\n[![Build Status](https://secure.travis-ci.org/mapnik/node-mapnik.png)](https://travis-ci.org/mapnik/node-mapnik)\n[![Build status](https://ci.appveyor.com/api/projects/status/ju29v1vcpif2iww8?svg=true)](https://ci.appveyor.com/project/Mapbox/node-mapnik)\n[![Coverage Status](https://coveralls.io/repos/mapnik/node-mapnik/badge.svg)](https://coveralls.io/r/mapnik/node-mapnik)\n\n## Usage\n\nRender a map from a stylesheet:\n\n```js\nvar mapnik = require('mapnik');\nvar fs = require('fs');\n\n// register fonts and datasource plugins\nmapnik.register_default_fonts();\nmapnik.register_default_input_plugins();\n\nvar map = new mapnik.Map(256, 256);\nmap.load('./test/stylesheet.xml', function(err,map) {\n    if (err) throw err;\n    map.zoomAll();\n    var im = new mapnik.Image(256, 256);\n    map.render(im, function(err,im) {\n      if (err) throw err;\n      im.encode('png', function(err,buffer) {\n          if (err) throw err;\n          fs.writeFile('map.png',buffer, function(err) {\n              if (err) throw err;\n              console.log('saved map image to map.png');\n          });\n      });\n    });\n});\n```\n\nConvert a jpeg image to a png:\n\n```js\nvar mapnik = require('mapnik');\nnew mapnik.Image.open('input.jpg').save('output.png');\n```\n\nConvert a shapefile to GeoJSON:\n\n```js\nvar mapnik = require('mapnik');\nmapnik.register_datasource(path.join(mapnik.settings.paths.input_plugins,'shape.input'));\nvar ds = new mapnik.Datasource({type:'shape',file:'test/data/world_merc.shp'});\nvar featureset = ds.featureset()\nvar geojson = {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n  ]\n}\nvar feat = featureset.next();\nwhile (feat) {\n    geojson.features.push(JSON.parse(feat.toJSON()));\n    feat = featureset.next();\n}\nfs.writeFileSync(\"output.geojson\",JSON.stringify(geojson,null,2));\n```\n\nFor more sample code see [the tests](./test) and [sample code](https://github.com/mapnik/node-mapnik-sample-code).\n\n## Depends\n\n* Node v0.10.x or v0.12.x (v0.12.x support requires node-mapnik >= v3.1.6)\n* C++11 compatible C++ runtime library\n\n\n## Troubleshooting\n\nIf you hit an error like:\n\n    Error: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.18' not found\n\nThis means your Linux distributions libstdc++ library is too old (for example you are running Ubuntu Precise rather than Trusty). To work around this upgrade libstdc++:\n\n    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test\n    sudo apt-get update -q\n    sudo apt-get install -y libstdc++6\n\nTo upgrade libstdc++ on travis (without sudo) you can do:\n\n```yaml\nlanguage: cpp\n\nsudo: false\n\naddons:\n  apt:\n    sources:\n     - ubuntu-toolchain-r-test\n    packages:\n     - libstdc++6 # upgrade libstdc++ on linux to support C++11\n```\n\n\n## Installing\n\nJust do:\n\n    npm install mapnik@3.x\n\nNote: This will install the latest node-mapnik 3.x series, which is recommended. There is also an [1.x series](https://github.com/mapnik/node-mapnik/tree/1.x) which maintains API compatibility with Mapnik 2.3.x and 2.2.x and a [v0.7.x series](https://github.com/mapnik/node-mapnik/tree/v0.7.x) which is not recommended unless you need to support Mapnik 2.1 or older.\n\nBy default, binaries are provided for:\n\n - 64 bit OS X 10.9, 64 bit Linux (>= Ubuntu Trusty), and 64/32 bit Windows\n - several node versions:\n   - [versions forLinux/Mac](<https://github.com/mapnik/node-mapnik/blob/master/.travis.yml#L19-L47>)\n   - [versions for Windows](<https://github.com/mapnik/node-mapnik/blob/master/appveyor.yml#L9-L32>)\n\nOn those platforms no external dependencies are needed.\n\nOther platforms will fall back to a source compile: see [Source Build](#source-build) for details.\n\nBinaries started being provided at node-mapnik >= 1.4.2 for OSX and Linux and at 1.4.8 for Windows.\n\n### Windows specific\n\n**NOTE:** Windows binaries for the **3.x** series require the Visual C++ Redistributable Packages for **Visual Studio 2015**:\n\n  - <https://mapbox.s3.amazonaws.com/windows-builds/visual-studio-runtimes/vcredist-VS2015/vcredist_x64.exe>\n  - <https://mapbox.s3.amazonaws.com/windows-builds/visual-studio-runtimes/vcredist-VS2015/vcredist_x86.exe>\n\nSee https://github.com/mapnik/node-mapnik/wiki/WindowsBinaries for more details.\n\nThe **1.x** series require the Visual C++ Redistributable Packages for **Visual Studio 2013**:\n\n - http://www.microsoft.com/en-us/download/details.aspx?id=40784\n\n\n## Source Build\n\nTo build from source you need:\n\n - Mapnik >= v3.0.10\n\nInstall Mapnik using the instructions at: https://github.com/mapnik/mapnik/wiki/Mapnik-Installation\n\nConfirm that the `mapnik-config` program is available and on your `${PATH}`.\n\nThen run (within the cloned `node-mapnik` directory:\n\n    npm install --build-from-source\n\n### Windows specific\n\nWindows builds are maintained in https://github.com/mapbox/windows-builds\n\n\n## Using node-mapnik from your node app\n\nTo require node-mapnik as a dependency of another package put in your package.json:\n\n    \"dependencies\"  : { \"mapnik\":\"*\" } // replace * with a given semver version string\n\n## Tests\n\nTo run the tests do:\n  \n    npm test\n\n## License\n\n  BSD, see LICENSE.txt\n",
  "readmeFilename": "README.md",
  "_id": "mapnik@3.5.13",
  "_shasum": "49f614b0d3bf0051a2f9131b4913c7e88a9521c5",
  "_resolved": "https://registry.npmjs.org/mapnik/-/mapnik-3.5.13.tgz",
  "_from": "https://registry.npmjs.org/mapnik/-/mapnik-3.5.13.tgz"
}
