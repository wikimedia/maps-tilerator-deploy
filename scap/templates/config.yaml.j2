logging:
  level: warn
  name: <%= log_name %>
  streams:
    - host: <%= logstash_host %>
      port: <%= logstash_port %>
      type: gelf
    - level: warn
      path: <%= log_file %>
      type: file
metrics:
  host: <%= metrics_host %>
  name: <%= metrics_name %>
  port: <%= metrics_port %>
  type: statsd
num_workers: <%= num_workers %>
services:
  - conf:
      allSourcesPublic: true
      cors: "*"
      daemonOnly: <%= daemon_only %>
      mwapi_req:
        body: "{{ default(request.query, {}) }}"
        headers:
          host: "{{request.params.domain}}"
          user-agent: "{{user-agent}}"
        method: post
        uri: <%= mwapi_uri %>
      port: <%= port %>
      proxy: <%= proxy %>
      redis: <%= redis_server %>
      restbase_req:
        body: "{{request.body}}"
        headers: "{{request.headers}}"
        method: "{{request.method}}"
        query: "{{ default(request.query, {}) }}"
        uri: "<%= restbase_uri %>/{{domain}}/v1/{+path}"
      sources:
        # Generates vtiles from database
        genallraw:
          public: true
          formats: [pbf]
          uri: tmsource://
          yaml:
            npm: ['<%= source_location %>', 'data.yml']
          yamlSetDataSource:
            if:
              dbname: '<%= dbname %>'
              host: ''
              type: postgis
            set:
              host: localhost
              user: {var: osmdb-user}
              password: {var: osmdb-pswd}

        # expands name_ json blob into several name_{code} tags
        genall:
          uri: json2tags://
          params:
            source: {ref: genallraw}
            tag: name

        # View tiles as generated directly from the database. Don't view zoom0-5
        genview:
          public: true
          formats: [png,json,headers,svg,jpeg]
          scales: [1.3, 1.5, 2, 2.6, 3]
          static: true
          maxheight: 2048
          maxwidth: 2048
          uri: tmstyle://
          yaml:
            npm: ['<%= style_location %>', "project.yml"]
          yamlSetParams:
            source: {ref: genall}

        # Use this source instead of 'genall' to avoid saving simple tiles with just water or landuse
        gen:
          public: true
          formats: [pbf]
          uri: substantial://
          params:
            source: {ref: genall}
            minzoom: 10
            minsize: 300
            layers: [water, landuse]

        # Cassandra storage
        <%= storage_id %>:
          public: true
          formats: [pbf]
          uri: cassandra://
          params:
            maxzoom: 15
            keyspace: <%= storage_id %>
            cp: {var: cassandra-servers}
            username: {var: cassandra-user}
            password: {var: cassandra-pswd}
            setLastModified: true
        #    repfactor: 4
        #    durablewrite: 0
        #    createIfMissing: false
        #    copyInfoFrom: {ref: gen}

        # View tiles as generated directly from the database. Don't view zoom0-5
        <%= storage_id %>view:
          public: true
          formats: [png,json,headers,svg,jpeg]
          scales: [1.3, 1.5, 2, 2.6, 3]
          static: true
          maxheight: 2048
          maxwidth: 2048
          uri: tmstyle://
          yaml:
            npm: ['<%= style_location %>', "project.yml"]
          yamlSetParams:
            source: {ref: <%= storage_id %>}

        # replace all name_{code} tags with a single name tag based on lang param
        osm-localized:
          uri: babel://
          params:
            source: {ref: <%= storage_id %>}
            tag: name
            combineName: false
            defaultLanguage: en

        # OSM PBF source
        osm-pbf:
          public: true
          formats: [pbf]
          uri: overzoom://
          params:
            source: {ref: osm-localized}
            maxzoom: 19
          overrideInfo:
            attribution: 'Map data &copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
            tiles: ['https://maps.wikimedia.org/osm-pbf/{z}/{x}/{y}.pbf']
          defaultHeaders:
            Cache-Control: 'public, max-age=86400, s-maxage=86400'

        # OSM map with international labeling - will be used as default
        osm-intl:
          public: true
          formats: [png,json,headers,svg,jpeg]
          scales: [1.3, 1.5, 2, 2.6, 3]
          maxzoom: 19
          static: true
          maxheight: 2048
          maxwidth: 2048
          uri: tmstyle://
          yaml:
            npm: ['<%= style_location %>', "project.yml"]
          yamlSetParams:
            source: {ref: osm-pbf}
          overrideInfo:
            attribution: 'Map data &copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
            tiles: ['https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png']
          defaultHeaders:
            Cache-Control: 'public, max-age=86400, s-maxage=86400'

        # OSM map without any labels
        osm:
          public: true
          formats: [png,json,headers,svg,jpeg]
          scales: [1.3, 1.5, 2, 2.6, 3]
          maxzoom: 19
          static: true
          maxheight: 2048
          maxwidth: 2048
          uri: tmstyle://
          yaml:
            npm: ['<%= style_location %>', "project.yml"]
          yamlSetParams:
            source: {ref: osm-pbf}
          yamlExceptLayers: ['country_label', 'place_label', 'poi_label']
          overrideInfo:
            attribution: 'Map data &copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
            tiles: ['https://maps.wikimedia.org/osm/{z}/{x}/{y}.png']
          defaultHeaders:
            Cache-Control: 'public, max-age=86400, s-maxage=86400'

      uiOnly: <%= ui_only %>
      variables:
        cassandra-pswd: <%= cassandra_password %>
        cassandra-servers:
        <% for server in cassandra_servers -%>
          - <%= server %>
        <% endfor -%>
        cassandra-user: <%= cassandra_user %>
        osmdb-pswd: <%= osmdb_password %>
        osmdb-user: <%= osmdb_user %>
      modules:
      - tilelive-tmsource
      - tilelive-tmstyle
      - "@kartotherian/autogen"
      - "@kartotherian/babel"
      - "@kartotherian/cassandra"
      - "@kartotherian/layermixer"
      - "@kartotherian/overzoom"
      - "@kartotherian/postgres"
      - "@kartotherian/substantial"
      - "@kartotherian/tilelive-vector"
    entrypoint: <%= entrypoint %>
    module: <%= module %>
    name: <%= name %>
worker_heap_limit_mb: <%= worker_heap_limit_mb %>
worker_heartbeat_timeout: <%= worker_heartbeat_timeout %>
